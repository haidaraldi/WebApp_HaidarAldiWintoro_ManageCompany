@model WebApp_HaidarAldiWintoro_ManageCompany.ViewModels.Master.MasterEmployeeViewModel

@{
    ViewData["Title"] = "Employees";
}

<!--Daterangepicker -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box">
            <div class="btn-group pull-right">
                <ol class="breadcrumb hide-phone p-0 m-0">
                    <li class="breadcrumb-item"><a>Manage Company</a></li>
                    <li class="breadcrumb-item active">Employees</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @if (TempData["MessageSuccess"] != null)
        {
            <div class="alert alert-success" role="alert">
                @TempData["MessageSuccess"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        <p>
            <!-- Small modal -->
            <button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target=".bs-example-modal-md"><i class="fa fa-plus-circle"></i> Add Employee</button>
        </p>
        <div class="col-md-1 m-t-30">

            <div class="modal fade bs-example-modal-md" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-md">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title mt-0" id="myLargeModalLabel">Add Employee</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        </div>
                        <div class="modal-body">
                            <form asp-action="Index" enctype="multipart/form-data">
                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <label class="control-label">First Name</label>
                                        <input asp-for="EmployeesVM.FirstName" class="form-control">
                                        <span asp-validation-for="EmployeesVM.FirstName" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-12">
                                        <label class="control-label">Last Name</label>
                                        <input asp-for="EmployeesVM.LastName" class="form-control">
                                        <span asp-validation-for="EmployeesVM.LastName" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-12">
                                        <label class="control-label">Phone</label>
                                        <input asp-for="EmployeesVM.Phone" class="form-control" onkeypress="return isNumber(event)">
                                        <span asp-validation-for="EmployeesVM.Phone" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-12">
                                        <label class="control-label">Email</label>
                                        <input asp-for="EmployeesVM.Email" class="form-control" type="email">
                                        <span asp-validation-for="EmployeesVM.Email" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-12">
                                        <label class="control-label">Company</label>
                                        <select asp-for="EmployeesVM.IndexCompany" class="form-control">
                                            <option disabled selected value="">Choose Company</option>
                                            @foreach (var item in Model.CompanyNames)
                                            {
                                                <option value="@item.IndexCompany">@item.CompanyName</option>
                                            }
                                        </select>
                                        <span asp-validation-for="EmployeesVM.IndexCompany" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div>
                                        <button type="submit" class="btn btn-success waves-effect waves-light">
                                            Save
                                        </button>
                                        <button type="reset" class="btn btn-secondary waves-effect m-l-5" data-dismiss="modal">
                                            Back to List
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div><!-- /.modal-content -->
                </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->
        </div>
        <center><h4>List Of Employees</h4></center>
        <br />
        <table id="datatable" class="table table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>No</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Phone</th>
                    <th>Email</th>
                    <th>Join Date</th>
                    <th>Company</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.EmployeesVMs.Count(); i++)
                {
                    <tr>
                        <td>@(i + 1).</td>
                        <td>@Model.EmployeesVMs[i].FirstName</td>
                        <td>@Model.EmployeesVMs[i].LastName</td>
                        <td>@Model.EmployeesVMs[i].Phone</td>
                        <td>@Model.EmployeesVMs[i].Email</td>
                        <td>@String.Format("{0:dd/MM/yyyy}", @Model.EmployeesVMs[i].JoinDate)</td>
                        <td>
                            <a href="#" name="companyName" data-toggle="modal" data-target="#modalRole-@i">@Model.EmployeesVMs[i].CompanyName</a>
                            <div id="modalRole-@i" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title mt-0" id="myModalLabel">Company Detail</h4>
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                        </div>
                                        <div class="modal-body">
                                            <h5>Company: @Model.EmployeesVMs[i].CompanyName</h5>
                                            <h5>Email: <a href="mailto:@Model.EmployeesVMs[i].CompanyEmail">@Model.EmployeesVMs[i].CompanyEmail</a></h5>
                                            <h5>Website: <a href="@Model.EmployeesVMs[i].CompanyWeb">@Model.EmployeesVMs[i].CompanyWeb</a></h5>

                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary waves-effect" data-dismiss="modal">Back</button>
                                        </div>
                                    </div><!-- /.modal-content -->
                                </div><!-- /.modal-dialog -->
                            </div><!-- /.modal -->
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-index="@Model.EmployeesVMs[i].Index" class="btn btn-sm btn-info rounded-0"><i class="fa fa-pencil-alt"></i></a>
                            <a class="btn btn-sm btn-danger rounded-0" onclick="Delete(@Model.EmployeesVMs[i].Index)"><i class="fa fa-trash-alt"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot style="border:none">
                <tr style="border:none">
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                    <td style="border:none"></td>
                </tr>
            </tfoot>
        </table>

    </div> <!-- end col -->
</div> <!-- end row -->



@section Scripts{

    <!--DateRangePicker -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">

        function ShowModal(item) {
            console.log(item);
        }

        var start_date;
        var end_date;
        var DateFilterFunction = (function (oSettings, aData, iDataIndex) {
            var dateStart = parseDateValue(start_date);
            var dateEnd = parseDateValue(end_date);

            var evalDate = parseDateValue(aData[5]);
            if ((isNaN(dateStart) && isNaN(dateEnd)) ||
                (isNaN(dateStart) && evalDate <= dateEnd) ||
                (dateStart <= evalDate && isNaN(dateEnd)) ||
                (dateStart <= evalDate && evalDate <= dateEnd)) {
                return true;
            }
            return false;
        });

        $(document).ready(function () {
            //$("#datatable").append(
            //    $('<tfoot/>').append($("#datatable thead tr").clone())
            //);

            var $dTable = $('#datatable').DataTable({
                processing: true,
                ordering: true,
                paging: true,
                searching: true,
                "ordering": true,
                "lengthChange": true,
                "pageLength": 10,
                "bDestroy": true,
                "pagingType": "full_numbers",
                "scrollY": true,
                "scrollX": true,
                "dom": "<'row'<'col-sm-4'l><'col-sm-5' <'datesearchbox'>><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>"
            });

            $("#datatable tfoot tr td").each(function (i) {
                if (i != 7) {
                    var select = $('<select><option value=""></option></select>')
                        .appendTo($(this).empty())
                        .on('change', function () {
                            var val = $(this).val();
                            debugger;
                            $dTable.column(i)
                                .search(val ? '^' + $(this).val() + '$' : val, true, false)
                                .draw();
                        });

                    $dTable.column(i).data().unique().sort().each(function (d, j) {

                        var tempdata = d.toString();
                        var a = tempdata.indexOf("-0")
                        var b = tempdata.indexOf("\n")
                        var c = tempdata.substring(78, b - 4)

                        select.append('<option value="' + c + '">' + c + '</option>');

                    });
                }
                else {
                    var select = ''.appendTo($(this).empty())
                }
            });

            $("div.datesearchbox").html('<div class="input-group"> <div class="input-group-addon"> <i class="glyphicon glyphicon-calendar"></i> </div><input type="text" class="form-control pull-right" id="datesearch" placeholder="Search by date range.."> </div>');

            document.getElementsByClassName("datesearchbox")[0].style.textAlign = "right";

            $('#datesearch').daterangepicker({
                autoUpdateInput: false
            });

            $('#datesearch').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
                start_date = picker.startDate.format('DD/MM/YYYY');
                end_date = picker.endDate.format('DD/MM/YYYY');
                $.fn.dataTableExt.afnFiltering.push(DateFilterFunction);
                $dTable.draw();
            });

            $('#datesearch').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
                start_date = '';
                end_date = '';
                $.fn.dataTable.ext.search.splice($.fn.dataTable.ext.search.indexOf(DateFilterFunction, 1));
                location.reload(true)
            });
        });

        function parseDateValue(rawDate) {
            var dateArray = rawDate.split("/");
            var parsedDate = new Date(dateArray[2], parseInt(dateArray[1]) - 1, dateArray[0]);  // -1 because months are from 0 to 11
            return parsedDate;
        }

        function Delete(index) {
            swal({
                title: "Are you sure want to Delete?",
                text: "You will not be able to restore the file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    type: 'DELETE',
                    url: '/api/Employees/' + index,
                    success: function (data) {
                        if (data.success) {
                            ShowMessage(data.message);
                            location.reload(true);
                        }
                    }
                });
            });
        }

        function isNumber(evt) {
            var theEvent = evt || window.event;
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
            if (key.length == 0) return;
            var regex = /^[0-9.\b]+$/;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }

        function ShowMessage(msg) {
            toastr.success(msg);
        }

    </script>
}

